#!/bin/sh

# Get the current branch name of the main repository
current_branch=$(git rev-parse --abbrev-ref HEAD)

# Define the submodule path
submodule_path="dummyrepo2/"  # Replace with your submodule path

# Logic for checking out the corresponding branch in the submodule
if [ "$current_branch" = "main" ] || [ "$current_branch" = "stg" ] || [ "$current_branch" = "dev" ]; then
    submodule_branch=$current_branch
else
    # Default to 'main' branch if the current branch is not one of the specified branches
    submodule_branch="main"
fi

echo "Checking out the submodule branch corresponding to $submodule_branch (for main repo branch $current_branch)"

# Change into the submodule directory
cd $submodule_path

# Fetch the latest changes and checkout the correct branch in the submodule
git fetch origin
git checkout $submodule_branch || git checkout -b $submodule_branch origin/$submodule_branch

# Pull the latest changes from the remote
git pull origin $submodule_branch

# Go back to the main repository directory
cd -

# Update the submodule in the main repository
git submodule update --remote --merge
